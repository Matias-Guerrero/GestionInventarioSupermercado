package gestorsupermercadoinventario.ventanas;

import gestorsupermercadoinventario.Gestor;
import gestorsupermercadoinventario.excepciones.PrecioNegativoException;
import gestorsupermercadoinventario.Producto;
import gestorsupermercadoinventario.excepciones.StockNegativoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * La clase `VentanaAgregarProducto` representa la ventana para agregar un nuevo producto.
 */
public class VentanaAgregarProducto extends javax.swing.JFrame {
    private Gestor gestor;
    
    /**
     * El constructor de la clase `VentanaAgregarProducto`.
     *
     * @param gestor El gestor que controla las operaciones del sistema.
     */
    public VentanaAgregarProducto(Gestor gestor) {
        initComponents();
        this.gestor = gestor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logo = new javax.swing.JLabel();
        msjTitulo = new javax.swing.JLabel();
        TextProveedor = new javax.swing.JTextField();
        msj1 = new javax.swing.JLabel();
        msj2 = new javax.swing.JLabel();
        TextProducto = new javax.swing.JTextField();
        msj3 = new javax.swing.JLabel();
        TextPrecio = new javax.swing.JTextField();
        msj4 = new javax.swing.JLabel();
        TextStock = new javax.swing.JTextField();
        btnAgregarConfirmacion = new javax.swing.JButton();
        backToMenu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/superLogo (1) (1).png"))); // NOI18N

        msjTitulo.setFont(new java.awt.Font("Noteworthy", 0, 18)); // NOI18N
        msjTitulo.setText("Agregar producto a proveedor");

        TextProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextProveedorActionPerformed(evt);
            }
        });

        msj1.setText("Ingrese el nombre del proveedor : ");

        msj2.setText("Ingrese el nombre del producto :");

        TextProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextProductoActionPerformed(evt);
            }
        });

        msj3.setText("Ingrese el precio del producto :");

        TextPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextPrecioActionPerformed(evt);
            }
        });

        msj4.setText("Ingrese la cantidad en stock del producto : ");

        TextStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextStockActionPerformed(evt);
            }
        });

        btnAgregarConfirmacion.setText("Agregar Producto");
        btnAgregarConfirmacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarConfirmacionActionPerformed(evt);
            }
        });

        backToMenu.setText("Volver a Menú");
        backToMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMenuActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backToMenu)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msj4)
                    .addComponent(msj3)
                    .addComponent(msj2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logo)
                        .addGap(40, 40, 40)
                        .addComponent(msjTitulo))
                    .addComponent(msj1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(TextStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                        .addComponent(TextPrecio, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TextProducto, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TextProveedor, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnAgregarConfirmacion)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(logo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(msjTitulo)))
                .addGap(59, 59, 59)
                .addComponent(msj1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(msj2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(msj3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(msj4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnAgregarConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backToMenu)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextProveedorActionPerformed

    private void TextProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextProductoActionPerformed

    private void TextStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextStockActionPerformed

    private void TextPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextPrecioActionPerformed
    
    /**
    * Este método se llama cuando se hace clic en el botón "Agregar".
    * Valida los datos ingresados, crea un producto y lo agrega al proveedor correspondiente.
    * Muestra un mensaje de confirmación o error.
    *
    * @param evt El evento de acción que desencadena este método.
    */
    private void btnAgregarConfirmacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarConfirmacionActionPerformed
        // TODO add your handling code here:
        
        //Obtener el nombre del proveedor desde el campo de texto de la ventana generada
        String nombreProveedor = TextProveedor.getText();
        
        //Obtener el nombre del producto desde el campo de texto de la ventana generada
        String nombreProducto = TextProducto.getText();
        
        //Inicializar variables para precio y cantidad de stock
        double precio = 0.0;
        int cantidadStock = 0;
         
        boolean datosValidos = false;

        
        //Validar el nombre del proveedor 
        if (nombreProveedor == null || (!nombreProveedor.equals("Proveedor A") && !nombreProveedor.equals("Proveedor B") && !nombreProveedor.equals("Proveedor C"))) {
            JOptionPane.showMessageDialog(null, "Error: El proveedor debe ser 'Proveedor A', 'Proveedor B' o 'Proveedor C'.");
            return; // Sale del método si ocurre un error
        }
        
        //Valida el nombre del producto 
        if (nombreProducto == null || nombreProducto.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Debe ingresar un nombre de producto válido.");
            return; // Sale del método si ocurre un error
        }
        
        try {
            precio = Double.parseDouble(TextPrecio.getText());
            if (precio < 0) {
                JOptionPane.showMessageDialog(null, "Error: El precio debe ser un número válido y mayor que 0.");
                return;
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Error: El precio debe ser un número válido.");
            return;
        }

        try {
            cantidadStock = Integer.parseInt(TextStock.getText());
            if (cantidadStock < 0) {
                JOptionPane.showMessageDialog(null, "Error: Debe ingresar un número entero válido y mayor que 0.");
                return;
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Error: Debe ingresar un número entero válido.");
            return;
        }

        datosValidos = true;
        
        
        Producto producto = null;
        try {
            producto = new Producto(nombreProducto, precio, cantidadStock);
        } catch (StockNegativoException ex) {
            Logger.getLogger(VentanaAgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PrecioNegativoException ex) {
            Logger.getLogger(VentanaAgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Producto producto = new Producto(nombreProducto, precio, cantidadStock);
        String datos = "Nombre del proveedor: " + nombreProveedor + "\n" + "Nombre del producto: " + nombreProducto + "\n" + "Precio: " + precio + "\n" + "Cantidad en stock: " + cantidadStock;
        
        JOptionPane.showMessageDialog(null,datos);
        jTextArea1.setText(datos);
        
        //Si los datos son válidos, se intenta agregar el producto 
        if (datosValidos) {
        // Agregar el producto al gestor (debes implementar este método en tu Gestor)
        boolean exito = false;
            try {
                exito = gestor.agregarProductoAProveedor(nombreProveedor,producto);
            } catch (StockNegativoException ex) {
                Logger.getLogger(VentanaAgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
            } catch (PrecioNegativoException ex) {
                Logger.getLogger(VentanaAgregarProducto.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (exito) {
                JOptionPane.showMessageDialog(null,"Producto agregado con éxito");
            } else {
                JOptionPane.showMessageDialog(null,"No se pudo agregar el producto.");
            }
        }   

        
    }//GEN-LAST:event_btnAgregarConfirmacionActionPerformed

    /**
    * Este método se llama cuando se hace clic en el botón "Volver a Menú".
    * Cierra la ventana actual y muestra la ventana del menú de proveedores.
    *
    * @param evt El evento de acción que desencadena este método.
    */
    private void backToMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMenuActionPerformed
        // TODO add your handling code here:
        
        //Se crea una nueva instancia de la ventana del menú de proveedor 
        VentanaProveedor newMenu = new VentanaProveedor(this.gestor);
        newMenu.setLocationRelativeTo(null);
        newMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backToMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Gestor gestor = null; 
                new VentanaAgregarProducto(gestor).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextPrecio;
    private javax.swing.JTextField TextProducto;
    private javax.swing.JTextField TextProveedor;
    private javax.swing.JTextField TextStock;
    private javax.swing.JButton backToMenu;
    private javax.swing.JButton btnAgregarConfirmacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel msj1;
    private javax.swing.JLabel msj2;
    private javax.swing.JLabel msj3;
    private javax.swing.JLabel msj4;
    private javax.swing.JLabel msjTitulo;
    // End of variables declaration//GEN-END:variables
}
