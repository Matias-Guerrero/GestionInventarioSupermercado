@startuml

class Producto {
    -nombreProducto: String
    -codigoBarra: String
    -precio: double
    -cantidadStock: int

    +Producto(nombreProducto: String, precio: double, cantidadStock: int)
    +getNombre(): String
    +getCodigoBarra(): String
    +getPrecio(): double
    +getCantidadStock(): int
    +setNombre(nombre: String): void
    +setCodigoBarra(codigoBarra: String): void
    +setPrecio(precio: double): void
    +setCantidadStock(cantidadStock: int): void
    +generarCodigoBarra(): String
    +actualizarStock(nuevaCantidad: int): void
    +actualizarStock(nuevaCantidad: int, aumentar: boolean): void
    +modificarProducto(nombre: String, precio: double, cantidadStock: int): void
    +obtenerInformacion(): String
}

class Proveedor {
    -nombreProveedor: String
    -correoElectronico: String
    -productosSuministrados: ArrayList<Producto>

    +Proveedor(nombreProveedor: String, correoElectronico: String)
    +getNombre(): String
    +getCorreoElectronico(): String
    +getProductosSuministrados(): ArrayList<Producto>
    +setNombre(nombre: String): void
    +setCorreoElectronico(correoElectronico: String): void
    +setProductosSuministrados(productosSuministrados: ArrayList<Producto>): void
    +agregarProductoSuministrado(producto: Producto): boolean
    +eliminarProductoSuministrado(nombreProducto: String): Producto
    +buscarProductoSuministrado(nombreProducto: String): Producto
    +buscarProductoSuministrado(nombreProducto: String, nombreProveedor: String): Producto
    +mostrarProductosSuministrados(): void
    +modificarProductoSuministrado(nombreProducto: String, nuevoNombre: String, nuevoPrecio: double, nuevaCantidadStock: int): boolean
}

class ProveedorLocal {
    -region: String

    +ProveedorLocal(nombreProveedor: String, correoElectronico: String, region: String)
    +getRegion(): String
    +setRegion(region: String): void
    +mostrarProductosSuministrados(): void
}

class ProveedorInternacional {
    -pais: String

    +ProveedorInternacional(nombreProveedor: String, correoElectronico: String, pais: String)
    +getPais(): String
    +setPais(pais: String): void
    +mostrarProductosSuministrados(): void
}

class Gestor {
    -proveedores: ArrayList<Proveedor>
    -mapaProductos: HashMap<String, Producto>

    +Gestor()
    +agregarProductoAProveedor(nombreProveedor: String, producto: Producto): boolean
    +eliminarProductoAProveedor(nombreProveedor: String, nombreProducto: String, cantidadEliminar: int): Producto
    +buscarProveedor(nombreProveedor: String): Proveedor
    +mostrarProductosSuministrados(nombreProveedor: String): void
    +mostrarProductosStock(): void
    +cargarDatosDesdeArchivo(nombreArchivo: String): void
    +guardarDatosEnArchivo(nombreArchivo: String): void
    +filtrarProductosPorStock(stockMinimo: int, stockMaximo: int): ArrayList<Producto>
    +generarInformeCSV(): StringBuilder
}

class GestorSupermercadoInventario {
    +main(args: String[]): void
}

GestorSupermercadoInventario --> Gestor: contiene
Gestor --> Proveedor: contiene
Gestor --> Producto: contiene
Proveedor <|-- ProveedorLocal
Proveedor <|-- ProveedorInternacional

@enduml